{"version":3,"sources":["components/RedditPosts/RedditPost/RedditPost.module.css","assets/metacriticLogo.png","components/SearchBar/SearchBar.module.css","components/GameInfo/Summary/Summary.module.css","components/RedditPosts/RedditPostsMenu/RedditPostsMenu.module.css","assets/logo.jpg","components/SearchBar/SearchBar.js","components/SuggestionsBox/SuggestionItems/SuggestionItem/SuggestionItem.js","components/SuggestionsBox/SuggestionItems/SuggestionItems.js","components/SuggestionsBox/SuggestionsBox.js","containers/SuggestionBoxContainer/SuggestionBoxContainer.js","axios.js","http.js","utils.js","containers/SearchBarContainers/SearchBarContainer.js","components/RedditPosts/RedditPost/RedditPost.js","components/LoadingSpinner/LoadingSpinner.js","components/RedditPosts/RedditPosts.js","components/RedditPosts/RedditPostsMenu/RedditPostsMenu.js","containers/RedditPostsContainer/RedditPostsContainer.js","components/SectionWrapper/SectionWrapper.js","components/Background/Background.js","components/ShadowBoxGradient/ShadowBoxGradient.js","components/YoutubePlayer/YoutubePlayer.js","components/Ratings/Ratings.js","components/GameInfo/Summary/Summary.js","containers/SummaryContainer/SummaryContainer.js","components/GameInfo/InfoBox/Info/Info.js","components/GameInfo/InfoBox/InfoBox.js","components/GameInfo/GameInfo.js","components/Logo/Logo.js","App.js","serviceWorker.js","index.js","components/LoadingSpinner/LoadingSpinner.module.css","components/GameInfo/GameInfo.module.css","components/SuggestionsBox/SuggestionsBox.module.css","components/SuggestionsBox/SuggestionItems/SuggestionItem/SuggestionItem.module.css","components/RedditPosts/RedditPosts.module.css","components/SectionWrapper/SectionWrapper.module.css","components/Background/Background.module.css","components/ShadowBoxGradient/ShadowBoxGradient.module.css","components/YoutubePlayer/YoutubePlayer.module.css","components/Ratings/Ratings.module.css","components/GameInfo/InfoBox/InfoBox.module.css","components/Logo/Logo.module.css"],"names":["module","exports","searchBar","props","data-testid","className","classes","SearchBar","suggestions","collapseSearch","defaultSearch","ref","searchRef","type","placeholder","id","onChange","event","search","target","value","searchButton","onClick","select","name","cancelButton","clear","style","visibility","showCancelBtn","suggestionItem","tabIndex","SuggestionItem","clicked","onKeyDown","navSelection","styleSelection","img","src","alt","suggestionItems","data","map","suggestion","idx","key","short_screenshots","length","image","suggestionsBox","SuggestionsBox","suggestionBoxRef","SuggestionItems","SuggestionsBoxContainer","state","selectedID","navArrowSelection","closest","keyCode","setState","navClickSelection","elementID","parseInt","confirmSelection","backgroundColor","fontWeight","color","this","searchInput","current","addEventListener","removeEventListener","prevProps","prevState","updateSelection","Component","instance","axios","create","baseURL","headers","interceptors","request","use","fetchRedditPosts","pageNum","get","then","response","catch","error","loadSuggestions","query","queryGameData","results","loadGameDetails","fetchGameDetails","console","log","loadRedditPosts","addDelay","delayTime","callback","timerID","clearTimeout","setTimeout","SearchBarContainer","searchValue","prevSearchValue","prevSelection","selection","React","createRef","displaySelection","selectionIdx","result","selectedValue","handleSearch","newSearchValue","searchDelay","clearSearch","getSuggestionCount","min","max","suggestionCount","RedditPost","collapse","toggleCollapse","newValue","header","postInfo","date","userName","fullPostLink","href","fullPostURL","title","postContent","dangerouslySetInnerHTML","__html","content","loadingSpinner","LoadingSpinner","ldsRoller","redditPosts","RedditPosts","posts","post","created","username","url","text","loading","redditPostsMenu","RedditPostsMenu","show","clickable","count","button","RedditPostsContainer","redditPostsData","postsPageNum","showPosts","isLoading","resetRedditPosts","gameId","postsData","appendRedditPosts","newRedditPostsData","forEach","push","sliceCurrPosts","slice","onBottomReached","window","innerHeight","scrollY","document","body","offsetHeight","newPage","togglePosts","postData","sectionWrapper","SectionWrapper","children","background","Background","shadowBoxGradient","degree","fromOpacity","toOpacity","ShadowBox","youtubePlayer","video","videoId","frameBorder","allow","allowFullScreen","YoutubePlayer","ratings","exceptional","recommended","meh","skip","Object","keys","i","percent","metacriticScore","metacritic","thumbsUp","thumbsDown","Ratings","require","summary","Summary","expand","textContainer","SummaryContainer","toggleExpansion","expandVal","info","infoBox","InfoBox","Info","gameInfo","GameInfo","InfoBoxContainer","developers","publishers","platforms","genres","logo","Logo","App","clips","handleSelectedValue","gameData","bgImage","platformData","platformObj","platform","parsePlatformData","background_image","clip","description","ShadowBoxGradient","params","marginTop","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fe464061.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"RedditPost\":\"RedditPost_RedditPost__1S8kX\",\"header\":\"RedditPost_header__1K_aT\",\"postInfo\":\"RedditPost_postInfo__2vfqb\",\"fullPostLink\":\"RedditPost_fullPostLink__1dvKE\",\"postContent\":\"RedditPost_postContent__1Ueiz\",\"collapse\":\"RedditPost_collapse__Wc-OH\"};","module.exports = __webpack_public_path__ + \"static/media/metacriticLogo.fb96c428.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__2Pbl1\",\"defaultSearch\":\"SearchBar_defaultSearch__2g9Hg\",\"collapseSearch\":\"SearchBar_collapseSearch__3DUDY\",\"searchButton\":\"SearchBar_searchButton__1mtZa\",\"cancelButton\":\"SearchBar_cancelButton__1Nz39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Summary\":\"Summary_Summary__2irCz\",\"textContainer\":\"Summary_textContainer__NbBgN\",\"expand\":\"Summary_expand__1qBQi\",\"collapse\":\"Summary_collapse__1xdmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RedditPostsMenu\":\"RedditPostsMenu_RedditPostsMenu__1ofYA\",\"clickable\":\"RedditPostsMenu_clickable__2fhiw\",\"button\":\"RedditPostsMenu_button__QLuzA\"};","module.exports = __webpack_public_path__ + \"static/media/logo.fe645a6c.jpg\";","import React from \"react\";\nimport classes from \"./SearchBar.module.css\";\n\nconst searchBar = (props) => {\n\n    return (\n        <div data-testid=\"searchBar\" className={classes.SearchBar}>\n            <input\n                className={props.suggestions ? classes.collapseSearch: classes.defaultSearch}\n                ref={props.searchRef}\n                type=\"search\"\n                placeholder=\"Search...\"\n                id=\"search\"\n                onChange={(event) => props.search(event.target.value)}/>\n\n            <button \n            className={classes.searchButton} \n            onClick={props.select}>\n                <ion-icon name=\"search-outline\"></ion-icon>\n            </button>\n\n            <button \n            className={classes.cancelButton} \n            onClick={props.clear} \n            style={{visibility: props.showCancelBtn ? \"visible\":\"hidden\"}}>\n                <ion-icon name=\"close-circle-outline\"></ion-icon>\n            </button>\n        </div>\n    );\n}\n\nexport default searchBar;","import React from \"react\" \nimport classes from './SuggestionItem.module.css';\n\nconst suggestionItem = (props) => {\n\n    return (\n        <div \n        tabIndex={props.id}\n        id={props.id} \n        className={classes.SuggestionItem} \n        onClick={(event) => props.clicked(event)}\n        onKeyDown={(event) => props.navSelection(event)}\n        style={props.styleSelection(props.id)}>\n            {props.img ? \n            <img src={props.img} alt=\"thumbnail\"/> :\n            <ion-icon name=\"alert-circle-outline\"></ion-icon>}\n            <p>{props.name}</p>\n        </div>\n    )\n}\n\nexport default suggestionItem;","import React from \"react\";\nimport SuggestionItem from \"./SuggestionItem/SuggestionItem\";\n\nconst suggestionItems = (props) => {\n\n    return props.data.map((suggestion, idx) => {\n        return (\n            <SuggestionItem\n            key={suggestion.id}\n            id={idx}\n            img={suggestion.short_screenshots.length > 0 ? suggestion.short_screenshots[0].image:null}\n            name={suggestion.name}\n            clicked={props.clicked}\n            navSelection={props.navSelection}\n            styleSelection={props.styleSelection}/>\n        )\n    });\n}\n\nexport default suggestionItems;","import React from \"react\";\nimport classes from \"./SuggestionsBox.module.css\";\nimport SuggestionItems from \"./SuggestionItems/SuggestionItems\";\n\nconst suggestionsBox = (props) => {\n\n    return (\n    <div className={classes.SuggestionsBox} ref={props.suggestionBoxRef}>\n        <SuggestionItems \n        data={props.data} \n        clicked={props.clicked} \n        styleSelection={props.styleSelection}\n        navSelection={props.navSelection}/>\n    </div>\n)};\n\nexport default suggestionsBox;","import React, { Component } from \"react\";\nimport SuggestionsBox from \"../../components/SuggestionsBox/SuggestionsBox\";\n\n/**\n * If the item is selected already and I click on it\n * confirm selection.\n * \n * Identify the selectedItem\n * \n */\n\n\nclass SuggestionsBoxContainer extends Component {\n\n    state = {\n        selectedID: 0\n    }\n    \n    componentDidMount() {\n        this.props.searchInput.current.addEventListener(\"keydown\", this.navArrowSelection);\n    }\n\n    componentWillUnmount() {\n        this.props.searchInput.current.removeEventListener(\"keydown\", this.navArrowSelection);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevState.selectedID !== this.state.selectedID) {\n            this.props.updateSelection(this.state.selectedID);\n        }\n    }\n\n    navArrowSelection = (event) => {\n        if(!event.target.closest(\"div\")) return;\n\n        let id = this.state.selectedID;\n        //When enter is pressed.\n\n        if(event.keyCode === 38) {            \n            //Arrow up\n            id = ((id-1) < 0) ? id:id-1;  \n            this.setState({ selectedID: id });\n\n        }\n\n        if(event.keyCode === 40) {\n            //Arrow down\n            id = ((id+1) > this.props.data.length - 1) ? id:id + 1;  \n            this.setState({ selectedID: id });\n        }\n    }\n\n    navClickSelection = (event) => {\n        if(!event.target) return;\n        const elementID = parseInt(event.target.closest(\"div\").id);\n        if(this.state.selectedID === elementID) {\n            // console.log(\"Confirm Selection\");\n            this.props.confirmSelection();\n        } else {\n            // console.log(\"Update Selection\");\n            this.setState({ selectedID: elementID });\n        }\n    }\n\n    //Handle the hightlighted selection.\n    styleSelection = (id) => {\n        if(this.state.selectedID === id){\n            return { \n                backgroundColor: \"rgba(128, 205, 250, 0.5)\",\n                fontWeight: \"bold\",\n                color: \"white\"\n            };\n        } else {\n            return {\n                backgroundColor: \"white\"\n            }\n        }\n    }\n\n    render() {\n        return (\n            <SuggestionsBox \n            data={this.props.data} \n            styleSelection={this.styleSelection}\n            navSelection={this.navArrowSelection}\n            clicked={this.navClickSelection}\n            />\n        )\n    }\n}\n\nexport default SuggestionsBoxContainer;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://rawg-video-games-database.p.rapidapi.com\",\n\theaders: {\n\t\t\"x-rapidapi-host\": \"rawg-video-games-database.p.rapidapi.com\",\n\t\t\"x-rapidapi-key\": \"a5e3fb3ebcmsh203426ca241b46ep1630eejsn0f17cd94c4f4\"\n    }\n});\n\ninstance.interceptors.request.use(request => {\n    //console.log(request);\n    return request;\n});\n\nexport default instance;","import axios from './axios';\n\nconst fetchGameDetails = (id) => {\n\n    //API Query\n    return axios.get(`/games/${id}`)\n    .then(response => {\n        return response.data;\n    }).catch(error => {\n        return error;\n    });\n}\n\nconst fetchRedditPosts = (id, pageNum) => {\n    //API Query\n    return axios.get(`/games/${id}/reddit?page=${pageNum}`)\n    .then(response => {\n        return response.data;\n    }).catch(error => {\n        return error;\n    });\n}\n\nconst queryGameData = (query, length) => {\n\n    //API Query\n    return axios.get(`/games?search=${query}&page_size=${length}`)\n    .then(response => {\n        return response.data;\n    }).catch(error => {\n        return error;\n    });\n}\n\n\nexport { fetchGameDetails, queryGameData, fetchRedditPosts };","import { fetchGameDetails, queryGameData, fetchRedditPosts } from './http';\n\nconst loadSuggestions = (query, length) => {\n    return queryGameData(query, length).then(response => {  \n        return response.results;\n    }).catch((error) => {\n        return error;\n    })\n}\n\nconst loadGameDetails = (id) => {\n    return fetchGameDetails(id).then(response => {\n        return response;\n    }).catch(error => {\n        console.log(error);\n    })\n}\n\nconst loadRedditPosts = (id, pageNum=1) => {\n    return fetchRedditPosts(id, pageNum).then(response => {  \n        return response;\n    }).catch((error) => {\n        return error;\n    })\n}\n\nconst addDelay = (delayTime, callback, timerID=null) => {\n    if(timerID) {\n        clearTimeout(timerID);\n    }\n\n    return setTimeout(callback, delayTime);\n}\n\nexport { loadSuggestions, loadGameDetails, addDelay, loadRedditPosts };\n\n\n","import React, { Component } from \"react\";\n\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport SuggestionsBoxContainer from '../SuggestionBoxContainer/SuggestionBoxContainer';\nimport { loadSuggestions, addDelay } from \"../../utils\";\n\n\nclass SearchBarContainer extends Component {\n\n    state = {\n        searchValue: '',\n        prevSearchValue: '',\n        prevSelection: '',\n        selection: null,\n        suggestions: null\n    }\n\n    searchInput = React.createRef();\n    timerID = null;\n\n    componentDidUpdate(prevProps, prevState) {\n        if(this.state.searchValue !== prevState.searchValue) {\n            this.search();\n        }\n    }\n\n    displaySelection = (selectionIdx) => {\n        if(!this.state.suggestions) return;\n\n        let result = this.state.suggestions[selectionIdx];\n        this.searchInput.current.value = result.name;\n        this.setState({\n            selection: result\n        });\n    }\n\n    confirmSelection = () => {\n        if(!this.state.selection) return;\n\n        this.props.selectedValue(this.state.selection);\n        this.setState({ suggestions: null });\n    }\n\n    handleSearch = (newSearchValue) => {\n       const callback = () => this.setState({ searchValue: newSearchValue });\n       const delayTime = this.props.searchDelay * 1000;\n       \n       this.timerID = addDelay(delayTime, callback, this.timerID);\n    }\n\n    clearSearch = () => {\n        this.searchInput.current.value = \"\";\n        this.setState({\n            searchValue: \"\",\n            suggestions: null\n        });\n    }\n\n    getSuggestionCount(min, max) {\n        if(this.props.suggestionCount > max) return max;\n        if(this.props.suggestionCount < min) return min;\n\n        return this.props.suggestionCount;\n    }\n\n    //Query search\n    search = () => {\n\n        if(this.state.searchValue.length > 0) {\n            //API Query\n            loadSuggestions(this.state.searchValue, this.getSuggestionCount(1, 5))\n            .then(results => {\n                this.setState({ \n                    suggestions: results.length > 0 ? results:null,\n                    selection: results.length > 0 ? results[0]:null\n                });\n            }).catch(error => {\n                console.log(\"Error: \" + error);\n            });\n        } else {\n            this.setState({\n                suggestions: null,\n                selection: null\n            });\n        }\n\n    }\n\n    render() {\n\n        return (\n            <div onKeyDown={(event) => event.key === 'Enter' ? this.confirmSelection():null}>\n            \n                <SearchBar \n                searchRef={this.searchInput}\n                search={this.handleSearch} \n                select={this.confirmSelection}\n                clear={this.clearSearch}\n                showCancelBtn={this.state.searchValue.length > 0}\n                suggestions={this.state.suggestions ? this.state.suggestions:null} />\n                \n                {this.state.suggestions ? \n                <SuggestionsBoxContainer \n                data={this.state.suggestions}\n                searchInput={this.searchInput}\n                updateSelection={this.displaySelection}\n                confirmSelection={this.confirmSelection} /> : null}\n            </div>\n        );\n    }\n}\n\nexport default SearchBarContainer;","import React, { Component } from 'react';\nimport classes from './RedditPost.module.css';\n\nclass RedditPost extends Component {\n\n    state = {\n        collapse: true\n    }\n\n    toggleCollapse = () => {\n        let newValue = !this.state.collapse;\n        this.setState({ collapse: newValue });\n    }\n\n    render() {\n\n        return (\n            <div className={classes.RedditPost}>\n                <div className={classes.header}>\n                    <div className={classes.postInfo}>\n                        <p>{this.props.date}</p>\n                        <p>{this.props.userName}</p>\n                    </div>\n                    <div className={classes.fullPostLink}>\n                        <a className=\"button\" href={this.props.fullPostURL}>View Full Post</a>\n                    </div>\n                </div>\n                <h4>{this.props.title}</h4>\n                <div className={`${classes.postContent} ${this.state.collapse ? classes.collapse:null}`}>\n                    {this.props.img ? <img src={this.props.img} alt=\"reddit\"/>:null}\n                    <div dangerouslySetInnerHTML={{__html: this.props.content}}></div>\n                </div>\n                <button className={\"button\"} onClick={this.toggleCollapse}>{this.state.collapse ? \"more\":\"less\"}</button>\n            </div>\n        );\n    }\n        \n};\n\nexport default RedditPost;","import React from 'react';\nimport classes from './LoadingSpinner.module.css';\n\nconst loadingSpinner = (props) => {\n    return (\n        <div className={classes.LoadingSpinner} style={props.style}>\n            <div className={classes.ldsRoller}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n        </div>\n    );\n};\n\nexport default loadingSpinner;","import React, { Fragment } from 'react';\nimport RedditPost from './RedditPost/RedditPost';\nimport classes from './RedditPosts.module.css';\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\n\nconst redditPosts = (props) => {\n\n    let redditPosts = (<div className={classes.RedditPosts}>\n        {props.posts.map((post) => {\n            return (<RedditPost\n                key={post.id}\n                date={post.created}\n                title={post.name}\n                userName={post.username}\n                fullPostURL={post.url}\n                img={post.image}\n                content={post.text}\n            />);\n        })};\n    </div>);\n\n    return (\n        <Fragment>\n            {redditPosts}\n            {props.loading ? <LoadingSpinner />:null}\n        </Fragment>\n    );\n};\n\nexport default redditPosts;","import React from 'react';\nimport classes from './RedditPostsMenu.module.css';\nimport ScrollableAnchor from 'react-scrollable-anchor';\n\nconst redditPostsMenu = (props) => {\n\n    return (\n        <ScrollableAnchor id={\"redditPostsSection\"}>\n            <div\n                className={classes.RedditPostsMenu}\n                style={props.show ? { backgroundColor: \"#333A41\" } : null}\n                onClick={props.clicked}\n            >\n                <div className={classes.clickable}>\n                    <a href=\"#redditPostsSection\" className=\"text\">Reddit Posts {props.count}</a>\n                </div>\n                <div className={classes.button}>\n                    <a href=\"#redditPostsSection\" className=\"button\"> {props.show ? \"X\" : \"expand\"} </a>\n                </div>\n            </div>\n        </ScrollableAnchor>\n\n    );\n};\n\nexport default redditPostsMenu;","import React, { Component } from 'react';\nimport RedditPosts from '../../components/RedditPosts/RedditPosts'\nimport RedditPostsMenu from '../../components/RedditPosts/RedditPostsMenu/RedditPostsMenu';\n\nimport { loadRedditPosts } from '../../utils';\n\nclass RedditPostsContainer extends Component {\n\n    state = {\n        redditPostsData: null,\n        postsPageNum: 1,\n        showPosts: false,\n        isLoading: false\n    }\n\n    componentDidMount() {\n\n        loadRedditPosts(this.props.gameId, this.state.postsPageNum).then(postData => {\n            //console.log(postData);\n            this.setState({ redditPostsData: postData });\n        });\n\n        window.addEventListener(\"scroll\", this.onBottomReached);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.onBottomReached);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevProps.gameId !== this.props.gameId) {\n            //console.log(\"Game Changed - Reset\");\n\n            if (this.state.postsPageNum === 1) {\n                //console.log(\"Reset Posts\");\n                this.resetRedditPosts();\n            }\n\n            this.setState({ postsPageNum: 1 });\n        }\n\n        if (prevState.showPosts !== this.state.showPosts) {\n            if (this.state.showPosts) return;\n            this.sliceCurrPosts();\n        }\n\n        if (prevState.postsPageNum !== this.state.postsPageNum) {\n            if (this.state.postsPageNum > 1) {\n                //console.log(this.state.postsPageNum);\n                //console.log('Append New 10 new Posts');\n                this.appendRedditPosts();\n            } else {\n                //console.log(\"Reset Posts\");\n                this.resetRedditPosts();\n            }\n        }\n    }\n\n\n    resetRedditPosts = () => {\n        loadRedditPosts(this.props.gameId, 1).then(postsData => {\n            this.setState({ redditPostsData: postsData });\n        });\n    }\n    appendRedditPosts = () => {\n        this.setState({ isLoading: true });\n        loadRedditPosts(this.props.gameId, this.state.postsPageNum).then(postsData => {\n            let newRedditPostsData = { ...this.state.redditPostsData };\n            \n            if(postsData.results.length > 0) {\n                postsData.results.forEach((post) => newRedditPostsData.results.push(post));\n            }\n\n            this.setState({\n                redditPostsData: newRedditPostsData,\n                isLoading: false\n            });\n        });\n    }\n    sliceCurrPosts = () => {\n        if (this.state.redditPostsData.results.length <= 0) return;\n\n        // console.log('Slicing down to 10 comments');\n\n        let newRedditPostsData = { ...this.state.redditPostsData };\n        newRedditPostsData.results = newRedditPostsData.results.slice(0, 10);\n\n        this.setState({ redditPostsData: newRedditPostsData });\n    }\n\n    onBottomReached = () => {\n        if (!this.state.showPosts || this.state.isLoading) return;\n\n        const offset = 0;\n        if ((window.innerHeight + window.scrollY - offset) >= document.body.offsetHeight) {\n            // you're at the bottom of the page\n            //load the reddit posts\n            //console.log(\"Bottom Reached - Increment Page\");\n            let newPage = this.state.postsPageNum + 1;\n            this.setState({ postsPageNum: newPage });\n        }\n    }\n\n    togglePosts = () => {\n        let newValue = !this.state.showPosts;\n\n        this.setState({ showPosts: newValue });\n    }\n\n    render() {\n        let redditPostsMenu = null;\n        let redditPosts = null;\n\n        if (this.state.redditPostsData) {\n            redditPostsMenu = <RedditPostsMenu show={this.state.showPosts} count={this.state.redditPostsData.count} clicked={this.togglePosts} />\n            redditPosts = <RedditPosts posts={this.state.redditPostsData.results} loading={this.state.isLoading} />\n        }\n\n        return (\n            <div>\n                {redditPostsMenu}\n                {this.state.showPosts && this.state.redditPostsData.results.length > 0 ? redditPosts : null}\n            </div>\n        );\n    }\n};\n\nexport default RedditPostsContainer;","import React from \"react\";\nimport classes from \"./SectionWrapper.module.css\";\n\nconst sectionWrapper = (props) => (\n    <section data-testid={'sectionWrapper'} className={classes.SectionWrapper}>\n        {props.children}\n    </section>\n);\n\nexport default sectionWrapper;","import React from \"react\";\nimport classes from \"./Background.module.css\";\n\nconst background = (props) => {\n    return (\n        <div className={classes.Background}>\n            <img src={props.image} alt={`Background`}/>\n        </div>\n    );\n}\n\nexport default background;","import React from 'react'\nimport classes from './ShadowBoxGradient.module.css';\n\nconst shadowBoxGradient = (props) => \n{\n    const degree = props.degree ? props.degree:0;\n    const fromOpacity = props.fromOpacity ? props.fromOpacity:0.2;\n    const toOpacity = props.toOpacity ? props.toOpacity:1;\n\n    return (\n        <div \n        className={classes.ShadowBox} \n        style={{\n            background: `linear-gradient(${degree}, rgba(0,0,0,${fromOpacity}), rgba(0,0,0,${toOpacity}))`\n        }}>\n        </div>\n    )\n};\n\nexport default shadowBoxGradient;","import React from \"react\";\nimport classes from './YoutubePlayer.module.css';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\n\nconst youtubePlayer = (props) => {\n    let video = null;\n\n    if(props.videoId) {\n        video = (<iframe\n        title=\"video\" \n        src={`https://www.youtube-nocookie.com/embed/${props.videoId}`} \n        frameBorder=\"0\" \n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n        allowFullScreen>\n        </iframe>)\n    } else {\n        video = (\n            <div>\n                <p>No Video Found :(</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className={classes.YoutubePlayer}>\n            {video ? video: <LoadingSpinner />}\n        </div>\n    );\n}\n\nexport default youtubePlayer;","import React from 'react';\nimport classes from './Ratings.module.css';\n\n\nconst ratings = (props) => {\n\n    const ratings = {\n        exceptional: 0,\n        recommended: 0,\n        meh: 0,\n        skip: 0\n    };\n\n    if(props.ratings.length > 0) {\n        Object.keys(ratings).forEach((key, i) => {\n            if(!props.ratings[i]) return;\n            ratings[key] = props.ratings[i].percent;\n        });\n    }\n\n    const metacriticScore = props.metacritic ? props.metacritic:0;\n    const thumbsUp = parseInt(ratings.exceptional + ratings.recommended);\n    const thumbsDown = parseInt(ratings.meh + ratings.skip);\n\n    return (\n        <div className={classes.Ratings}>\n            <div><img src={require(\"../../assets/metacriticLogo.png\")} alt=\"Metacritic Logo\"/><p>{metacriticScore}</p></div>\n            <div><ion-icon name=\"thumbs-up-sharp\"></ion-icon><p>{thumbsUp}%</p></div>\n            <div><ion-icon name=\"thumbs-down-sharp\"></ion-icon><p>{thumbsDown}%</p></div>\n        </div>\n    );\n}\n\nexport default ratings;","import React from 'react';\nimport classes from './Summary.module.css';\n\nconst summary = (props) => {\n    return (\n        <div className={`${classes.Summary} ${props.expand ? classes.expand:classes.collapse}`}>\n            <div className={classes.textContainer}>\n                <div>\n                    <h4>Summary</h4>\n                    <p dangerouslySetInnerHTML={{__html: props.data}}></p>\n                </div>\n            </div>\n            <button onClick={props.clicked}>{props.expand ? \"less\":\"more\"}</button>\n        </div>\n    );\n};\n\nexport default summary;","import React, { Component } from 'react';\nimport Summary from '../../components/GameInfo/Summary/Summary';\n\nclass SummaryContainer extends Component {\n   \n    state = {\n        expand: false\n    }\n   \n    toggleExpansion = () => {\n        let expandVal = !this.state.expand;\n        this.setState({ expand: expandVal });\n    }\n\n    render() {\n        return (\n            <Summary \n            expand={this.state.expand} \n            clicked={this.toggleExpansion}\n            data={this.props.data} />\n        );\n    }\n};\n\nexport default SummaryContainer;","import React from 'react';\n\nconst info = (props) => {\n    return props.data.map((info, i) => {\n        return (\n            <li key={i}>{info.name}</li>\n        );\n    });\n};\n\nexport default info;","import React from 'react';\nimport classes from './InfoBox.module.css';\nimport Info from './Info/Info';\n\nconst infoBox = (props) => {\n    return (\n        <div className={classes.InfoBox}>\n            <h4>{props.title}</h4>\n            <ul>\n               <Info data={props.data}/>\n            </ul>\n        </div>\n    );\n};\n\nexport default infoBox;","import React from \"react\";\nimport classes from \"./GameInfo.module.css\";\n\nimport SummaryContainer from '../../containers/SummaryContainer/SummaryContainer';\nimport InfoBox from \"./InfoBox/InfoBox\";\n\nconst gameInfo = (props) => {\n\n\n    return (\n        <div className={classes.GameInfo}>\n            <SummaryContainer data={props.summary}/>\n\n            <div className={classes.InfoBoxContainer}>\n                <InfoBox title=\"Developers:\" data={props.developers}/>\n                <InfoBox title=\"Publishers:\" data={props.publishers}/>\n                <InfoBox title=\"Platforms:\" data={props.platforms}/>\n                <InfoBox title=\"Genres:\" data={props.genres}/>\n            </div>\n        </div>\n    )\n};\n\nexport default gameInfo;","import React from 'react';\nimport classes from './Logo.module.css';\n\nconst logo = () => {\n    return (\n        <div className={classes.Logo}>\n            <img src={require(\"../../assets/logo.jpg\")} />\n            {/* <h1>VGScout</h1> */}\n        </div>\n    );\n};\n\nexport default logo;","import React, { Component } from 'react';\nimport './App.css';\n\nimport SearchBarContainer from \"./containers/SearchBarContainers/SearchBarContainer\";\nimport RedditPostsContainer from './containers/RedditPostsContainer/RedditPostsContainer';\n\nimport SectionWrapper from \"./components/SectionWrapper/SectionWrapper\";\nimport Background from \"./components/Background/Background\";\nimport ShadowBoxGradient from \"./components/ShadowBoxGradient/ShadowBoxGradient\";\nimport YoutubePlayer from \"./components/YoutubePlayer/YoutubePlayer\";\nimport Ratings from \"./components/Ratings/Ratings\";\nimport GameInfo from \"./components/GameInfo/GameInfo\";\nimport Particles from 'react-particles-js';\nimport Logo from './components/Logo/Logo';\n\n\nimport { loadGameDetails } from \"./utils\";\n\n//TESTING\nimport LoadingSpinner from \"./components/LoadingSpinner/LoadingSpinner\";\n\nclass App extends Component {\n\n  state = {\n    selectedValue: null,\n    isLoading: false\n  }\n\n  clips = null;\n\n  handleSelectedValue = (newValue) => {\n    this.setState({ isLoading: true });\n    loadGameDetails(newValue.id).then(gameData => {\n      this.setState({ selectedValue: gameData });\n      this.setState({ isLoading: false });\n    });\n  }\n\n  render() {\n\n    //Default Values\n    let bgImage = null;\n    let youtubePlayer = null;\n    let ratings = null;\n    let gameInfo = null;\n    let redditPosts = null;\n\n    const parsePlatformData = () => {\n      let platforms = this.state.selectedValue.platforms ? this.state.selectedValue.platforms : null;\n      return platforms ? platforms.map(platformObj => platformObj.platform) : null;\n    }\n\n    //Once we have the game data loaded.\n    if (this.state.selectedValue !== null) {\n      // console.log(this.state.selectedValue);\n      let platformData = parsePlatformData();\n      bgImage = this.state.selectedValue.background_image;\n\n      youtubePlayer = (\n        <YoutubePlayer\n          videoId={this.state.selectedValue.clip ? this.state.selectedValue.clip.video : null}\n        />\n      );\n\n      //TODO, Find replacements for IGN and gamespot.\n      ratings = (\n        <Ratings\n          metacritic={this.state.selectedValue.metacritic}\n          ratings={this.state.selectedValue.ratings}\n        />\n      );\n\n      gameInfo = (\n        <GameInfo\n          summary={this.state.selectedValue.description}\n          developers={this.state.selectedValue.developers}\n          publishers={this.state.selectedValue.publishers}\n          platforms={platformData}\n          genres={this.state.selectedValue.genres}\n        />);\n\n      redditPosts = (\n        <RedditPostsContainer gameId={this.state.selectedValue.id} />\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <ShadowBoxGradient degree={0} fromOpacity={0.2} toOpacity={0.9} />\n\n        <Particles\n          params={{\n            \"particles\": {\n              \"number\": {\n                \"value\": 50\n              },\n              \"size\": {\n                \"value\": 3\n              }\n            },\n            \"interactivity\": {\n              \"events\": {\n                \"onhover\": {\n                  \"enable\": true,\n                  \"mode\": \"repulse\"\n                }\n              }\n            }\n          }} />\n        <Background image={bgImage} />\n        \n        <SectionWrapper>\n          <Logo />\n          <SearchBarContainer\n            selectedValue={this.handleSelectedValue}\n            suggestionCount={3}\n            searchDelay={0.2} />\n        </SectionWrapper>\n\n        <SectionWrapper>\n          {youtubePlayer}\n          {ratings}\n          {gameInfo}\n\n          {/* Reddit Comments */}\n          {redditPosts}\n        </SectionWrapper>\n        {this.state.isLoading ? <LoadingSpinner style={{ marginTop: \"100px\" }} /> : null}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingSpinner\":\"LoadingSpinner_LoadingSpinner__10Z8_\",\"ldsRoller\":\"LoadingSpinner_ldsRoller__2-cuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameInfo\":\"GameInfo_GameInfo__2_66S\",\"InfoBoxContainer\":\"GameInfo_InfoBoxContainer__5E2KR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuggestionsBox\":\"SuggestionsBox_SuggestionsBox__zk74N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuggestionItem\":\"SuggestionItem_SuggestionItem__1fjqp\",\"active\":\"SuggestionItem_active__3JnO6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RedditPosts\":\"RedditPosts_RedditPosts__1dq2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SectionWrapper\":\"SectionWrapper_SectionWrapper__1hXNV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Background\":\"Background_Background__3nj4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShadowBox\":\"ShadowBoxGradient_ShadowBox__3YVcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"YoutubePlayer\":\"YoutubePlayer_YoutubePlayer__3sEFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ratings\":\"Ratings_Ratings__3qeti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InfoBox\":\"InfoBox_InfoBox__EvLvX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};"],"sourceRoot":""}